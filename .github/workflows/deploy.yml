name: Build, Test & Deploy .NET 9 API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  IMAGE_NAME: ghcr.io/valius256/photonpiano-api
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  POSTGRES_CONNECTION: ${{ secrets.POSTGRES_CONNECTION }}
  ASPNETCORE_ENVIRONMENT: Production

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: photonpiano
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: anhphatdeptrai
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore PhotonPiano.API.sln

      - name: Build
        run: dotnet build PhotonPiano.API.sln --configuration Release --no-restore

      - name: Run Tests with Testcontainers
        run: dotnet test PhotonPiano.API.sln --configuration Release --no-build --verbosity normal

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }}:latest -f PhotonPiano.Api/Dockerfile .

      - name: Push Docker Image
        run: docker push ${{ env.IMAGE_NAME }}:latest
