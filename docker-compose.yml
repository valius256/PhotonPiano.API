version: "3.8"

services:
  photonpiano-database:
    image: postgres:15
    container_name: photonpiano-database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: photonpiano
    ports:
      - "5432:5432"
    volumes:
      - /root/photonpiano/postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  photonpiano-api:
    image: ghcr.io/valius256/photonpiano-api:latest
    container_name: photonpiano-api
    restart: unless-stopped
    depends_on:
      - photonpiano-database
    ports:
      - "8080:8080"  # HTTP
      - "8081:8081"  # HTTPS
    environment:
      - ASPNETCORE_URLS=https://0.0.0.0:8081;http://0.0.0.0:8080
      - POSTGRES_CONNECTION=${POSTGRES_CONNECTION}
      - HangfireConnectionString=${POSTGRES_CONNECTION}
      - Firebase__Auth__ApiKey=${FIREBASE_API_KEY}
      - Firebase__Auth__Authority=${FIREBASE_AUTHORITY}
      - Firebase__Auth__Issuer=${FIREBASE_ISSUER}
      - Firebase__Auth__Audience=${FIREBASE_AUDIENCE}
      - VNPAY__BASEURL=${VNPAY_BASEURL}
      - VNPAY__TMNCODE=${VNPAY_TMNCODE}
      - VNPAY__HASHSECRET=${VNPAY_HASHSECRET}
      - VNPAY__RETURNURL=${VNPAY_RETURNURL}
      - VNPAY__CURRCODE=${VNPAY_CURRCODE}
      - VNPAY__LOCALE=${VNPAY_LOCALE}
      - VNPAY__TIMEZONEID=${VNPAY_TIMEZONEID}
      - VNPAY__VERSION=${VNPAY_VERSION}
      - VNPAY__COMMAND=${VNPAY_COMMAND}
      - PINATA__JWTTOKEN=${PINATA_JWTTOKEN}
      - PINATA__GATEWAYBASEURL=${PINATA_GATEWAYBASEURL}
      - ConnectionStrings__RedisConnectionStrings=photonpiano-cache:6379,abortConnect=false
      - Logging__LogLevel__Hangfire=Debug
      - Logging__LogLevel__Microsoft.EntityFrameworkCore.Database.Command=Information
    volumes:
      - /root/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro
      - /root/.aspnet/https:/https:ro
    networks:
      - app-network

  photonpiano-cache:
    image: redis:6.2
    container_name: photonpiano-cache
    restart: always
    volumes:
      - redis-data:/data
    command: >
      redis-server
      --save 60 1
      --loglevel warning
      --dir /data
    networks:
      - app-network

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge
