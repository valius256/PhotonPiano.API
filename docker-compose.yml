version: "3.8"

services:
  photonpiano-database:
    image: postgres:15-alpine3.20
    container_name: photonpiano-database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: photonpiano
    ports:
      - "5432:5432"
    volumes:
      - /root/photonpiano/postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  photonpiano-api:
    image: ghcr.io/valius256/photonpiano-api:latest
    container_name: photonpiano-api
    restart: unless-stopped
    depends_on:
      - photonpiano-database
    ports:
      - "8080:8080"  # HTTP
      - "8081:8081"  # HTTPS
    environment:
      - ASPNETCORE_URLS=https://0.0.0.0:8081;http://0.0.0.0:8080
      - POSTGRES_CONNECTION=${POSTGRES_CONNECTION}
      - HangfireConnectionString=${POSTGRES_CONNECTION}
      - Firebase__Auth__ApiKey=${FIREBASE_API_KEY}
      - Firebase__Auth__Authority=${FIREBASE_AUTHORITY}
      - Firebase__Auth__Issuer=${FIREBASE_ISSUER}
      - Firebase__Auth__Audience=${FIREBASE_AUDIENCE}
      - VNPAY__BASEURL=${VNPAY_BASEURL}
      - VNPAY__TMNCODE=${VNPAY_TMNCODE}
      - VNPAY__HASHSECRET=${VNPAY_HASHSECRET}
      - VNPAY__RETURNURL=${VNPAY_RETURNURL}
      - VNPAY__CURRCODE=${VNPAY_CURRCODE}
      - VNPAY__LOCALE=${VNPAY_LOCALE}
      - VNPAY__TIMEZONEID=${VNPAY_TIMEZONEID}
      - VNPAY__VERSION=${VNPAY_VERSION}
      - VNPAY__COMMAND=${VNPAY_COMMAND}
      - PINATA__JWTTOKEN=${PINATA_JWTTOKEN}
      - PINATA__GATEWAYBASEURL=${PINATA_GATEWAYBASEURL}
      - CONNECTIONSTRINGS__REDISCONNECTIONSTRINGS=${REDIS_CONNECTION_STRING}
      - JWTAUTH__KEY=${JWTAUTH_KEY}
      - JWTAUTH__ISSUER=${JWTAUTH_ISSUER}
      - JWTAUTH__AUDIENCE=${JWTAUTH_AUDIENCE}
      - JWTAUTH__DURATIONINDAYS=${JWTAUTH_DURATIONINDAYS}
    volumes:
      - /root/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro
      - /root/.aspnet/https:/https:ro
    networks:
      - app-network
  
  photonpiano-web:
    image: ghcr.io/minhtrantuan3112/photonpiano-webapp:latest
    container_name: photonpiano-web
    restart: unless-stopped
    depends_on:
      - photonpiano-api
    ports:
      - "3000:3000"
    networks:
      - app-network
  
  prometheus:
    image: prom/prometheus:v3.4.0-rc.0
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest-ubuntu
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - app-network
    restart: unless-stopped

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge
